// This file is auto-generated from the OpenAPI specification
// Do not edit this file manually

// Types for /api?module=account&action=balance
export interface ApimoduleaccountactionbalanceParams {
  /** the string representing the address to check for balance */
  address: string;

  /** the string pre-defined block parameter, either latest_mined, latest_state, latest_finalized, latest_confirmed, latest_checkpoint or earliest
   * @default latest_state */
  tag?: string;
}

export interface ApimoduleaccountactionbalanceResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=account&action=balancemulti
export interface ApimoduleaccountactionbalancemultiParams {
  /** the string representing the address to check for balance */
  address: string;

  /** the string pre-defined block parameter, either latest_mined, latest_state, latest_finalized, latest_confirmed, latest_checkpoint or earliest
   * @default latest_state */
  tag?: string;
}

export interface ApimoduleaccountactionbalancemultiResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    /** Account address */
    address?: string;

    /** Account balance */
    balance?: string;
  }>;
}

// Types for /api?module=account&action=txlist
export interface ApimoduleaccountactiontxlistParams {
  /** the string representing the address to check for balance */
  address: string;

  /** the integer block number to start searching for transactions */
  startblock?: number;

  /** the integer block number to stop searching for transactions */
  endblock?: number;

  /** the integer page number, if pagination is enabled
   * @default 1 */
  page?: number;

  /** the number of transactions displayed per page
   * @default 100 */
  offset?: number;

  /** the sorting preference, use asc to sort by ascending and desc to sort by descending
   * @default desc */
  sort?: string;
}

export interface ApimoduleaccountactiontxlistResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    blockNumber?: string;

    timeStamp?: string;

    hash?: string;

    nonce?: string;

    blockHash?: string;

    transactionIndex?: string;

    from?: string;

    to?: string;

    value?: string;

    gas?: string;

    gasPrice?: string;

    isError?: string;

    txreceipt_status?: string;

    input?: string;

    contractAddress?: string;

    cumulativeGasUsed?: string;

    gasUsed?: string;

    confirmations?: string;
  }>;
}

// Types for /api?module=account&action=txlistinternal
export interface ApimoduleaccountactiontxlistinternalParams {
  /** the string representing the transaction hash to check for internal transactions */
  txhash?: string;

  /** the string representing the address to check for balance */
  address?: string;

  /** the integer block number to start searching for transactions */
  startblock?: number;

  /** the integer block number to stop searching for transactions */
  endblock?: number;

  /** the integer page number, if pagination is enabled
   * @default 1 */
  page?: number;

  /** the number of transactions displayed per page
   * @default 100 */
  offset?: number;

  /** the sorting preference, use asc to sort by ascending and desc to sort by descending
   * @default desc */
  sort?: string;
}

export interface ApimoduleaccountactiontxlistinternalResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    blockNumber?: string;

    timeStamp?: string;

    hash?: string;

    from?: string;

    to?: string;

    value?: string;

    contractAddress?: string;

    input?: string;

    type?: string;

    traceId?: string;

    isError?: string;

    errCode?: string;
  }>;
}

// Types for /api?module=account&action=tokentx
export interface ApimoduleaccountactiontokentxParams {
  /** the string representing the token contract address to check for balance */
  contractaddress?: string;

  /** the string representing the address to check for balance */
  address?: string;

  /** the integer page number, if pagination is enabled
   * @default 1 */
  page?: number;

  /** the number of transactions displayed per page
   * @default 100 */
  offset?: number;

  /** the integer block number to start searching for transactions */
  startblock?: number;

  /** the integer block number to stop searching for transactions */
  endblock?: number;

  /** the sorting preference, use asc to sort by ascending and desc to sort by descending
   * @default desc */
  sort?: string;
}

export interface ApimoduleaccountactiontokentxResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    blockNumber?: string;

    timeStamp?: string;

    hash?: string;

    nonce?: string;

    blockHash?: string;

    from?: string;

    contractAddress?: string;

    to?: string;

    value?: string;

    tokenName?: string;

    tokenSymbol?: string;

    tokenDecimal?: string;

    transactionIndex?: string;

    gas?: string;

    gasPrice?: string;

    gasUsed?: string;

    cumulativeGasUsed?: string;

    /** deprecated */
    input?: string;

    confirmations?: string;
  }>;
}

// Types for /api?module=account&action=tokennfttx
export interface ApimoduleaccountactiontokennfttxParams {
  /** the string representing the token contract address to check for balance */
  contractaddress?: string;

  /** the string representing the address to check for balance */
  address?: string;

  /** the integer page number, if pagination is enabled
   * @default 1 */
  page?: number;

  /** the number of transactions displayed per page
   * @default 100 */
  offset?: number;

  /** the integer block number to start searching for transactions */
  startblock?: number;

  /** the integer block number to stop searching for transactions */
  endblock?: number;

  /** the sorting preference, use asc to sort by ascending and desc to sort by descending
   * @default desc */
  sort?: string;
}

export interface ApimoduleaccountactiontokennfttxResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    blockNumber?: string;

    timeStamp?: string;

    hash?: string;

    nonce?: string;

    blockHash?: string;

    from?: string;

    contractAddress?: string;

    to?: string;

    value?: string;

    tokenName?: string;

    tokenSymbol?: string;

    tokenDecimal?: string;

    transactionIndex?: string;

    gas?: string;

    gasPrice?: string;

    gasUsed?: string;

    cumulativeGasUsed?: string;

    /** deprecated */
    input?: string;

    confirmations?: string;
  }>;
}

// Types for /api?module=account&action=getminedblocks
export interface ApimoduleaccountactiongetminedblocksParams {
  /** the string representing the address to check for balance */
  address: string;

  /** the string pre-defined block type, only support 'blocks' type
   * @default blocks */
  blocktype?: string;

  /** the integer page number, if pagination is enabled
   * @default 1 */
  page?: number;

  /** the number of transactions displayed per page
   * @default 100 */
  offset?: number;
}

export interface ApimoduleaccountactiongetminedblocksResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    /** Block Number */
    blockNumber?: string;

    /** The timeStamp is represented in Unix timestamp */
    timeStamp?: string;

    /** Block Reward */
    blockReward?: string;
  }>;
}

// Types for /api?module=account&action=balancehistory
export interface ApimoduleaccountactionbalancehistoryParams {
  /** the string representing the address to check for balance */
  address: string;

  /** the integer block number to check balance for eg. 12697906 */
  blockno: number;
}

export interface ApimoduleaccountactionbalancehistoryResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=contract&action=getabi
export interface ApimodulecontractactiongetabiParams {
  /** the string representing the address to check for balance */
  address: string;
}

export interface ApimodulecontractactiongetabiResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=contract&action=getsourcecode
export interface ApimodulecontractactiongetsourcecodeParams {
  /** the string representing the address to check for balance */
  address: string;
}

export interface ApimodulecontractactiongetsourcecodeResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    SourceCode?: string;

    ABI?: string;

    ContractName?: string;

    CompilerVersion?: string;

    OptimizationUsed?: string;

    Runs?: string;

    ConstructorArguments?: string;

    EVMVersion?: string;

    Library?: string;

    LicenseType?: string;

    Proxy?: string;

    Implementation?: string;

    SwarmSource?: string;
  }>;
}

// Types for /api
// eslint-disable-next-line
export interface ApiParams {}

export interface ApiResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=contract&action=checkverifystatus
export interface ApimodulecontractactioncheckverifystatusParams {
  /** Upon successful submission, a GUID is returned, which can be used to check for submission status. */
  guid: string;
}

export interface ApimodulecontractactioncheckverifystatusResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    SourceCode?: string;

    ABI?: string;

    ContractName?: string;

    CompilerVersion?: string;

    OptimizationUsed?: string;

    Runs?: string;

    ConstructorArguments?: string;

    EVMVersion?: string;

    Library?: string;

    LicenseType?: string;

    Proxy?: string;

    Implementation?: string;

    SwarmSource?: string;
  }>;
}

// Types for /api?module=contract&action=verifyproxycontract
export interface ApimodulecontractactionverifyproxycontractParams {
  /** the string representing the address to check for balance */
  address: string;

  /** proxy's implementation contract address */
  expectedimplementation?: string;
}

export interface ApimodulecontractactionverifyproxycontractResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=contract&action=checkproxyverification
export interface ApimodulecontractactioncheckproxyverificationParams {
  /** Upon successful submission, a GUID is returned, which can be used to check for submission status. */
  guid: string;
}

export interface ApimodulecontractactioncheckproxyverificationResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=transaction&action=getstatus
export interface ApimoduletransactionactiongetstatusParams {
  /** the string representing the transaction hash to check for internal transactions */
  txhash: string;
}

export interface ApimoduletransactionactiongetstatusResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: {
    /** The isError field returns 0 for successful transactions and 1 for failed transactions */
    isError?: string;

    /** Error description */
    errDescription?: string;
  };
}

// Types for /api?module=transaction&action=gettxreceiptstatus
export interface ApimoduletransactionactiongettxreceiptstatusParams {
  /** the string representing the transaction hash to check for internal transactions */
  txhash: string;
}

export interface ApimoduletransactionactiongettxreceiptstatusResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: {
    /** The status field returns 0 for failed transactions and 1 for successful transactions */
    status?: string;
  };
}

// Types for /api?module=block&action=getblocknobytime
export interface ApimoduleblockactiongetblocknobytimeParams {
  /** the integer representing the Unix timestamp in seconds */
  timestamp: number;

  /** the closest available block to the provided timestamp, either before or after
   * @default before */
  closest?: string;
}

export interface ApimoduleblockactiongetblocknobytimeResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=stats&action=tokensupply
export interface ApimodulestatsactiontokensupplyParams {
  /** the string representing the token contract address to check for balance */
  contractaddress: string;
}

export interface ApimodulestatsactiontokensupplyResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=account&action=tokenbalance
export interface ApimoduleaccountactiontokenbalanceParams {
  /** the string representing the token contract address to check for balance */
  contractaddress: string;

  /** the string representing the address to check for balance */
  address: string;
}

export interface ApimoduleaccountactiontokenbalanceResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=stats&action=tokensupplyhistory
export interface ApimodulestatsactiontokensupplyhistoryParams {
  /** the string representing the token contract address to check for balance */
  contractaddress: string;

  /** the integer block number to check balance for eg. 12697906 */
  blockno: number;
}

export interface ApimodulestatsactiontokensupplyhistoryResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /api?module=account&action=tokenbalancehistory
export interface ApimoduleaccountactiontokenbalancehistoryParams {
  /** the string representing the token contract address to check for balance */
  contractaddress: string;

  /** the string representing the address to check for balance */
  address: string;

  /** the integer block number to check balance for eg. 12697906 */
  blockno: number;
}

export interface ApimoduleaccountactiontokenbalancehistoryResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: string;
}

// Types for /nft/balances
export interface BalancesParams {
  /** Owner address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  owner: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;
}

export interface BalancesResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /nft/tokens
export interface TokensParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract?: string;

  /** Owner address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  owner?: string;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The field used for sorting. The value is latest_update_time or mint_time
   * @default latest_update_time */
  sortField?: string;

  /** A cursor to retrieve the next page
   * @default 0 */
  cursor?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** If show brief which contains name，image and description, the value is true/false.
   * @default false */
  withBrief?: string;

  /** If show metadata, the value is true/false.
   * @default false */
  withMetadata?: string;

  /** If suppress error when withBrief and/or withMetadata is set to true to parse metadata, the value is true/false.
   * @default false */
  suppressMetadataError?: string;
}

export interface TokensResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    /** A cursor to retrieve the next page */
    next?: string;

    list?: array;
  };
}

// Types for /nft/preview
export interface PreviewParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract: string;

  /** Token id. It's uint256 in solidity. Using string here. */
  tokenId: string;

  /** If show metadata, the value is true/false.
   * @default false */
  withMetadata?: string;
}

export interface PreviewResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    /** Contract address of the token. */
    contract?: string;

    /** The token id. */
    tokenId?: string;

    /** The name of NFT */
    name?: string;

    /** The image uri of NFT */
    image?: string;

    /** The description of NFT */
    description?: string;

    /** Token type, ERC20、ERC721 or ERC1155 */
    type?: string;

    /** The owner address. */
    owner?: string;

    rawData?: object;

    /** A string describing a particular reason that we were unable to fetch complete metadata for the NFT. */
    error?: string;
  };
}

// Types for /nft/fts
export interface FtsParams {
  /** The name attribute contained in nft metadata */
  name: string;

  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract?: string;
}

export interface FtsResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /nft/owners
export interface OwnersParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract: string;

  /** Token id. It's uint256 in solidity. Using string here. */
  tokenId?: string;

  /** A cursor to retrieve the next page
   * @default 0 */
  cursor?: string;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;
}

export interface OwnersResponse {
  code?: number;

  message?: string;

  data?: object;
}

// Types for /nft/transfers
export interface TransfersParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract: string;

  /** Token id. It's uint256 in solidity. Using string here. */
  tokenId?: string;

  /** A cursor to retrieve the next page
   * @default 0 */
  cursor?: string;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  from?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  to?: string;

  /** */
  startBlock?: number;

  /** */
  endBlock?: number;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;
}

export interface TransfersResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    /** A cursor to retrieve the next page */
    next?: string;

    list?: array;

    addressInfo?: object;
  };
}

// Types for /util/decode/method
export interface MethodParams {
  /** Hash array of transactions to decode data, separated by comma,
eg. 0x8378892767d0afce19b278015702531a61512e8444ee7f51c41c90e56fec462d,0xa09c63d8dc9867851b254b31a723e653c9608a94a4a61bc97bf8a5f4aeffb4f4 */
  hashes: string;
}

export interface MethodResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    /** Transaction hash. */
    hash?: string;

    /** Decoded data of the transaction. */
    decodedData?: string;

    /** Error message when something wrong. */
    error?: string;
  };
}

// Types for /util/decode/method/raw
export interface RawParams {
  /** To address array of transactions to decode data, separated by comma,
eg. 0xc18944582317654327f20ce92df111cae83995dd,0x30b987679c1dcf3a8c890395eadf178078a99b82 */
  contracts: string;

  /** To input data array of transactions to decode data, separated by comma,
eg. 0xaea1414f,0x6e756fb200000000000000000000000015a0a156ce9feb9f01881b3b4a9788c49e65c6fa00000000000000000000000000000000000000000000 */
  inputs: string;
}

export interface RawResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    /** Contract address. */
    contract?: string;

    /** Input data of the transaction. */
    input?: string;

    /** Decoded data of the transaction. */
    decodedData?: string;

    /** Error message when something wrong. */
    error?: string;
  };
}

// Types for /statistics/supply
// eslint-disable-next-line
export interface SupplyParams {}

export interface SupplyResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    /** Total issued balance in Drip */
    totalIssued?: string;

    /** Total circulating balance in Drip */
    totalCirculating?: string;

    /** Total staking balance in Drip */
    totalStaking?: string;

    /** Total collateral balance in Drip */
    totalCollateral?: string;

    /** Zero address's balance in Drip */
    nullAddressBalance?: string;

    /** Two year unlock address's balance in Drip */
    twoYearUnlockBalance?: string;

    /** Four year unlock address's balance in `Drip` */
    fourYearUnlockBalance?: string;
  };
}

// Types for /statistics/mining
export interface MiningParams {
  /** Indicator calculation period, should be one of min(minute), hour or day. Default is hour.
   * @default hour
   * @enum min, hour, day */
  intervalType?: "min" | "hour" | "day";

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface MiningResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/tps
export interface TpsParams {
  /** Indicate calculation period, should be one of min(minute), hour or day. Default is hour.
   * @default hour
   * @enum min, hour, day */
  intervalType?: "min" | "hour" | "day";

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface TpsResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/contract
export interface ContractParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface ContractResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/account/cfx/holder
export interface HolderParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface HolderResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/account/growth
export interface GrowthParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface GrowthResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/account/active
export interface ActiveParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface ActiveResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/account/active/overall
export interface OverallParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface OverallResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/transaction
export interface TransactionParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface TransactionResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/cfx/transfer
export interface TransferParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface TransferResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/token/transfer
export interface TransferParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract?: string;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface TransferResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/top/gas/used
export interface UsedParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface UsedResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    totalGas?: string;

    list?: array;
  };
}

// Types for /statistics/top/miner
export interface MinerParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface MinerResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    minTime?: string;

    maxTime?: string;

    difficultyTotal?: string;

    list?: array;
  };
}

// Types for /statistics/top/transaction/sender
export interface SenderParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface SenderResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    minTime?: string;

    maxTime?: string;

    valueTotal?: string;

    list?: array;
  };
}

// Types for /statistics/top/transaction/receiver
export interface ReceiverParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface ReceiverResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    minTime?: string;

    maxTime?: string;

    valueTotal?: string;

    list?: array;
  };
}

// Types for /statistics/top/cfx/sender
export interface SenderParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface SenderResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    minTime?: string;

    maxTime?: string;

    valueTotal?: string;

    list?: array;
  };
}

// Types for /statistics/top/cfx/receiver
export interface ReceiverParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface ReceiverResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    minTime?: string;

    maxTime?: string;

    valueTotal?: string;

    list?: array;
  };
}

// Types for /statistics/top/token/transfer
export interface TransferParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface TransferResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    list?: array;
  };
}

// Types for /statistics/top/token/sender
export interface SenderParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface SenderResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    list?: array;
  };
}

// Types for /statistics/top/token/receiver
export interface ReceiverParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface ReceiverResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    list?: array;
  };
}

// Types for /statistics/top/token/participant
export interface ParticipantParams {
  /** Calculates the ranking in the specified time span 24h, 3d or 7d. If not provided, default value is 24h
   * @default 24h */
  spanType?: string;
}

export interface ParticipantResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    list?: array;
  };
}

// Types for /statistics/token/holder
export interface HolderParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract: string;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface HolderResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/token/unique/sender
export interface SenderParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract: string;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface SenderResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/token/unique/receiver
export interface ReceiverParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract: string;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface ReceiverResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/token/unique/participant
export interface ParticipantParams {
  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract: string;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface ParticipantResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/block/base-fee
export interface BasefeeParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface BasefeeResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/block/avg-priority-fee
export interface AvgpriorityfeeParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface AvgpriorityfeeResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/block/gas-used
export interface GasusedParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface GasusedResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /statistics/block/txs-by-type
export interface TxsbytypeParams {
  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1).
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 2000.
   * @default 10 */
  limit?: number;
}

export interface TxsbytypeResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /account/transactions
export interface TransactionsParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1). Maximum 10000.
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  from?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  to?: string;

  /** */
  startBlock?: number;

  /** */
  endBlock?: number;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;
}

export interface TransactionsResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;

    addressInfo?: object;
  };
}

// Types for /account/cfx/transfers
export interface TransfersParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1). Maximum 10000.
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  from?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  to?: string;

  /** */
  startBlock?: number;

  /** */
  endBlock?: number;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;
}

export interface TransfersResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;

    addressInfo?: object;
  };
}

// Types for /account/erc20/transfers
export interface TransfersParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1). Maximum 10000.
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  from?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  to?: string;

  /** */
  startBlock?: number;

  /** */
  endBlock?: number;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;
}

export interface TransfersResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;

    addressInfo?: object;
  };
}

// Types for /account/erc721/transfers
export interface TransfersParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1). Maximum 10000.
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  from?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  to?: string;

  /** */
  startBlock?: number;

  /** */
  endBlock?: number;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Token id. It's uint256 in solidity. Using string here. */
  tokenId?: string;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;
}

export interface TransfersResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;

    addressInfo?: object;
  };
}

// Types for /account/erc1155/transfers
export interface TransfersParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1). Maximum 10000.
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  from?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  to?: string;

  /** */
  startBlock?: number;

  /** */
  endBlock?: number;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Token id. It's uint256 in solidity. Using string here. */
  tokenId?: string;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;
}

export interface TransfersResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;

    addressInfo?: object;
  };
}

// Types for /account/erc3525/transfers
export interface TransfersParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1). Maximum 10000.
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  from?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  to?: string;

  /** */
  startBlock?: number;

  /** */
  endBlock?: number;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Token id. It's uint256 in solidity. Using string here. */
  tokenId?: string;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;
}

export interface TransfersResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;

    addressInfo?: object;
  };
}

// Types for /account/transfers
export interface TransfersParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /** A cursor to retrieve the next page
   * @default 0 */
  cursor?: string;

  /** The number of skipped records, usually it's pageSize * (pageNumber - 1). Maximum 10000.
   * @default 0 */
  skip?: number;

  /** The number of records displayed on the page. Maximum 100.
   * @default 10 */
  limit?: number;

  /** Contract address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  contract?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  from?: string;

  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  to?: string;

  /** */
  startBlock?: number;

  /** */
  endBlock?: number;

  /** Timestamp in seconds. */
  minTimestamp?: number;

  /** Timestamp in seconds. */
  maxTimestamp?: number;

  /** Token id. It's uint256 in solidity. Using string here. */
  tokenId?: string;

  /** Sort in ASC or DESC order by timestamp
   * @default DESC */
  sort?: string;

  /** Query the transfer record of the address based on the specified transferType which includes
1. Transaction

	1.1 'transaction'
2. CFX Transfer

	2.1 'call'

	2.2 'create'
3. Token Transfer

	3.1 'transfer_20'

	3.2 'transfer_721'

	3.3 'transfer_1155' */
  transferType?: string;
}

export interface TransfersResponse {
  code?: number;

  message?: string;

  data?: object;
}

// Types for /account/approvals
export interface ApprovalsParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /**
   * @default
   * @enum ERC20, ERC721, ERC1155 */
  tokenType?: "ERC20" | "ERC721" | "ERC1155";

  /** Whether to query each NFT token id, only valid for ERC721.
   * @default false
   * @enum true, false */
  byTokenId?: true | false;
}

export interface ApprovalsResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    total?: number;

    list?: array;
  };
}

// Types for /account/tokens
export interface TokensParams {
  /** Account address, it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a */
  account: string;

  /** Token type, includes ERC20、ERC721、ERC1155 or native. Multiple types separated by commas. If not set, all tokens will be returned. */
  tokenType?: string;
}

export interface TokensResponse {
  status?: number;

  message?: string;

  /** API response result */
  result?: {
    list?: array;
  };
}

// Types for /token/tokeninfos
export interface TokeninfosParams {
  /** Contract addresses, separated by comma,
eg. it's like 0x672158893ce87d812befd2209bc1b7818fe48b2a,0xfd2209bc1b7818fe48b2a672158893ce87d812be */
  contracts: string;
}

export interface TokeninfosResponse {
  status?: string;

  message?: string;

  /** API response result */
  result?: Array<{
    /** Contract address of the token. */
    contract?: string;

    /** Name of the token. */
    name?: string;

    /** Symbol of the token. */
    symbol?: string;

    /** Decimal of the token, omit if empty. */
    decimals?: number;

    /** Token type, ERC20、ERC721、ERC1155. */
    type?: string;

    /** Icon url, optional. */
    iconUrl?: string;

    /** The quote url of token, optional. */
    quoteUrl?: string;

    /** The price of token in USDT, optional. */
    priceInUSDT?: string;

    /** A string describing a particular reason that we were unable to get token info. */
    error?: string;
  }>;
}
