import { OpenAPIV3 } from "openapi-types";
import { parseOpenApiSpec, generateTypeDefinitions } from "./openapi-parser";
import { evmApi } from "./evmapi";
import * as fs from "fs";
import * as path from "path";

// Example OpenAPI spec
const spec: OpenAPIV3.Document = evmApi;

// Parse all endpoints
const endpointMap = parseOpenApiSpec(spec);

// Generate type definitions for all endpoints
let allTypeDefinitions = `// This file is auto-generated from the OpenAPI specification
// Do not edit this file manually

`;

// Process each endpoint
for (const [path, endpoints] of endpointMap) {
  allTypeDefinitions += `// Types for ${path}\n`;
  for (const endpoint of endpoints) {
    allTypeDefinitions += generateTypeDefinitions(endpoint, spec) + "\n";
  }
  allTypeDefinitions += "\n";
}

// Write to file
const outputPath = path.join(__dirname, "..", "src", "types", "generated-api-types.ts");
fs.mkdirSync(path.dirname(outputPath), { recursive: true });
fs.writeFileSync(outputPath, allTypeDefinitions);

console.log(`Generated type definitions written to ${outputPath}`);
